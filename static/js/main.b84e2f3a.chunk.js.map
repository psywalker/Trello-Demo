{"version":3,"sources":["actions/index.js","UI/Button/Button.js","UI/Title/Title.js","selectors/getTitleClasses.js","UI/TextArea/TextArea.js","selectors/getBtnClasses.js","containers/Task/Task.js","containers/BoardList/BoardList.js","containers/Board/Board.js","components/Page404/Page404.js","router/index.js","reducers/lists.js","reducers/tasks.js","reducers/index.js","initialStore.js","index.js"],"names":["nextListId","Button","_ref","children","props","Object","objectWithoutProperties","react_default","a","createElement","Title","level","getTitleClasses","size","TextArea","React","forwardRef","ref","assign","getBtnClasses","type","Task","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","taskMenuHide","setState","taskEditBtnShow","taskMenuToggle","state","handleEditTask","e","preventDefault","handleRemoveTask","_this$props","id","listId","removeTask","taskContainer","createRef","taskMenuWrapper","taskMenuTextArea","current","focus","top","getBoundingClientRect","y","style","_this$props2","text","className","UI_Button_Button","onClick","UI_Title_Title","classes","build_default","onClickOutside","action","TextArea_TextArea","Component","mapDispatchToProps","taskId","connect","ownProps","_","get","concat","BoardList","boardMenuHide","boardMenuShow","boardMenuToggle","addTaskFormHide","addTaskFormShow","addTaskFormToggle","handleKeyPressAddTask","addTask","key","addTaskTextArea","value","handleRemoveList","removeList","handleAddTask","_this$props3","_this$props4","name","tasks","_this$state","map","containers_Task_Task","onKeyPress","placeholder","list","lists","filter","i","listsIds","tasksId","tasksArr","length","Board","openFormAddList","addListForm","handleAddList","addList","listTitleInput","containers_BoardList_BoardList","Page404","Main","BrowserRouter","basename","process","dist","Switch","Route","path","exact","component","counterTaskId","arguments","undefined","toConsumableArray","objectSpread","task","BoardsObj","combineReducers","initialStore","store","createStore","render","es","router","document","getElementById"],"mappings":"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","file":"static/js/main.b84e2f3a.chunk.js","sourcesContent":["let nextListId = 3\r\n\r\nexport const addList = text => ({\r\n  type: 'ADD_LIST',\r\n  id: nextListId++,\r\n  text,\r\n})\r\n\r\nexport const removeList = id => ({\r\n  type: 'REMOVE_LIST',\r\n  id: id,\r\n})\r\n\r\nexport const addTask = (id, text) => ({\r\n  type: 'ADD_TASK',\r\n  listId: id,\r\n  text,\r\n})\r\n\r\nexport const removeTask = (taskId, listId) => ({\r\n  type: 'REMOVE_TASK',\r\n  taskId,\r\n  listId,\r\n})","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Button = ({ children, ...props }) => (\r\n  <button {...props}>{ children }</button>\r\n)\r\n\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Title = ({ children, level, ...props }) => {\r\n  switch (level) {\r\n    case 'h1':\r\n      return <h1 {...props}>{children}</h1>\r\n    case 'h2':\r\n      return <h2 {...props}>{children}</h2>\r\n    case 'h3':\r\n      return <h3 {...props}>{children}</h3>\r\n    default:\r\n      return <h3 {...props}>{children}</h3>\r\n  } \r\n}\r\nexport default Title;\r\n","export const getTitleClasses = (size) => {\r\n  switch (size) {\r\n    case 'big':\r\n      return ' size_big'\r\n    case 'middle':\r\n      return ' size_middle'\r\n    default:\r\n      return ' size_middle';\r\n  }\r\n}","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst TextArea = React.forwardRef((props, ref) => (\r\n  <textarea ref={ref} {...props} />\r\n));\r\n  \r\nexport default TextArea;\r\n","export const getBtnClasses = (type) => {\r\n  switch (type) {\r\n    case 'primary':\r\n      return ' button_type_primary'\r\n    case 'close':\r\n     return ' button_type_close'\r\n    case 'ellipsis':\r\n     return ' button_type_ellipsis'\r\n    case 'long':\r\n     return ' button_type_long'\r\n    case 'link':\r\n     return ' button_type_link'\r\n    case 'dark':\r\n     return ' button_type_dark'\r\n    case 'visible':\r\n     return ' button_type_visible'\r\n    default:\r\n      return ' button';\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { removeTask } from '../../actions';\r\nimport Button from '../../UI/Button/Button';\r\nimport Title from '../../UI/Title/Title';\r\nimport { getTitleClasses } from '../../selectors/getTitleClasses';\r\nimport TextArea from '../../UI/TextArea/TextArea';\r\nimport { getBtnClasses } from '../../selectors/getBtnClasses';\r\nimport './styles.scss';\r\n\r\nclass Task extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskEditBtnShow: false,\r\n    }\r\n\r\n    this.taskContainer = React.createRef();\r\n    this.taskMenuWrapper = React.createRef();\r\n    this.taskMenuTextArea = React.createRef();\r\n    \r\n  } \r\n\r\n  componentDidUpdate() {\r\n    if (!this.taskMenuTextArea.current && !this.taskMenuWrapper.current) return;\r\n    this.taskMenuTextArea.current.focus();\r\n    const top = this.taskContainer.current.getBoundingClientRect().y;\r\n    this.taskMenuWrapper.current.style.top = top + 'px';\r\n  }\r\n  taskMenuHide = () => {\r\n    this.setState({ taskEditBtnShow: false });\r\n  };\r\n\r\n  taskMenuToggle = () => {\r\n    const { taskEditBtnShow } = this.state;\r\n    this.setState({ taskEditBtnShow: !taskEditBtnShow });\r\n  };\r\n  \r\n  handleEditTask = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleRemoveTask = (e) => {\r\n    e.preventDefault();\r\n    const { id, listId, removeTask } = this.props;\r\n\r\n    removeTask(id, listId);\r\n    this.taskMenuHide();\r\n  };\r\n  render() {\r\n\r\n    const { id, text } = this.props;\r\n    const { taskEditBtnShow } = this.state;\r\n\r\n    return (\r\n      <div className=\"task\" ref={this.taskContainer}>\r\n        <Button \r\n          type=\"button\" \r\n          className={getBtnClasses('visible')}\r\n          onClick={this.taskMenuToggle}\r\n        >\r\n          <i className=\"fas fa-pen\" />\r\n        </Button>\r\n        <Title \r\n          level=\"h3\"\r\n          classes={getTitleClasses('middle')}\r\n        >\r\n          {id}: {text}\r\n        </Title>\r\n        <ClickOutside \r\n          className=\"clickOutSide\" \r\n          onClickOutside={this.taskMenuHide}\r\n        >\r\n          {taskEditBtnShow && (\r\n            <div \r\n              className=\"task-menu-wrapper\" \r\n              ref={this.taskMenuWrapper}\r\n            >\r\n\r\n              <div \r\n                className=\"task-menu-wrapper__fade\" \r\n                onClick={this.taskMenuToggle} \r\n              />\r\n\r\n              <div className=\"task-menu-wrapper__inner\">\r\n\r\n                <form action=\"#\" className=\"task-menu-fields\">\r\n                  <TextArea \r\n                    className=\"task-menu-fields__textarea\" \r\n                    ref={this.taskMenuTextArea} \r\n                  />\r\n                  <Button \r\n                    type=\"button\" \r\n                    className={getBtnClasses('primary')}\r\n                    onClick={this.handleEditTask}\r\n                  >\r\n                    Сохранить\r\n                  </Button>\r\n                </form>\r\n\r\n                <ul className=\"task-menu\">\r\n                  <li className=\"task-menu__item\">\r\n                    <Button \r\n                      type=\"button\" \r\n                      className={getBtnClasses('dark')}\r\n                      onClick={this.handleRemoveTask}\r\n                    >\r\n                      <i className=\"far fa-file-archive button__icon\" />\r\n                      Архивировать\r\n                    </Button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ClickOutside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => \r\n{\r\n  const taskId = _.get(ownProps, ['match', 'params', 'id']) || ownProps.id;\r\n  const taskText = _.get(state, ['tasks', `${taskId-1}`, 'text']);\r\n\r\n  return { \r\n    id: taskId, \r\n    text: taskText\r\n  };\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n  removeTask,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task)\r\n","import React, { Component } from 'react';\nimport ClickOutside from 'react-click-outside';\nimport { connect } from 'react-redux';\nimport Task from '../Task/Task';\nimport { removeList } from '../../actions';\nimport { addTask } from '../../actions';\nimport Button from '../../UI/Button/Button';\nimport Title from '../../UI/Title/Title';\nimport TextArea from '../../UI/TextArea/TextArea';\nimport { getBtnClasses } from '../../selectors/getBtnClasses';\nimport { getTitleClasses } from '../../selectors/getTitleClasses';\nimport './styles.scss';\nimport '../Task/styles.scss';\n\nclass BoardList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardMenuShow: false,\n      addTaskFormShow: false,\n    }\n\n    this.addTaskTextArea = React.createRef();\n\n  }\n  componentDidUpdate() {\n    if (!this.addTaskTextArea.current) return;\n    this.addTaskTextArea.current.focus();\n  }\n  boardMenuHide = () => {\n    this.setState({ boardMenuShow: false });\n  };\n\n  boardMenuToggle = () => {\n    const { boardMenuShow } = this.state;\n    this.setState({ boardMenuShow: !boardMenuShow });\n  };\n\n  addTaskFormHide = (e) => {\n    e.preventDefault();\n    this.setState({ addTaskFormShow: false });\n  };\n\n  addTaskFormToggle = () => {\n    const { addTaskFormShow } = this.state;\n    this.setState({ addTaskFormShow: !addTaskFormShow });\n  };\n\n  handleKeyPressAddTask = (e) => {\n    const { listId, addTask } = this.props;\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addTask(listId, this.addTaskTextArea.current.value);\n      this.setState({ addTaskFormShow: false });\n    }\n  };\n\n  handleRemoveList = (e) => {\n    const {listId, removeList } = this.props;\n    e.preventDefault();\n    removeList(listId);\n  }\n\n  handleAddTask = (e) => {\n    const {listId, addTask } = this.props;\n    this.addTaskFormHide(e);\n    addTask(listId, this.addTaskTextArea.current.value);\n  }\n\n  render() {\n\n    const {\n      name,\n      tasks,\n      listId,\n    } = this.props;\n\n    const { boardMenuShow, addTaskFormShow } = this.state;\n    return (\n      <div className=\"board boards__item\">\n        <ClickOutside\n          className=\"clickOutSide\"\n          onClickOutside={this.boardMenuHide}\n        >\n          <Button \n            className={getBtnClasses('ellipsis')}\n            onClick={this.boardMenuToggle}\n          />\n\n          {boardMenuShow && (\n            <div className=\"board-menu-wrapper\">\n              <Button \n                type=\"button\" \n                className={getBtnClasses('close')}\n                onClick={this.boardMenuToggle}\n              >\n                ✖\n              </Button>\n              <span className=\"board-menu-wrapper__title\">Действие со списком</span>\n              <ul className=\"board-menu\">\n                <li className=\"board-menu__item\">\n                  <Button \n                    type=\"button\"\n                    className={getBtnClasses('long')}\n                    onClick={this.handleRemoveList}\n                  >\n                    Архивировать список\n                  </Button>\n                </li>\n              </ul>\n            </div>\n          )}\n        </ClickOutside>\n        <Title \n          level=\"h3\"\n          className={getTitleClasses('middle')}\n        >\n          {name}\n        </Title>\n\n        <div className=\"tasks tasks-wrapper\">\n          <div className=\"tasks-wrapper__inner\">\n            {tasks.map(({id, text}) => {\n              return <Task \n                key={id} \n                text={text} \n                id={id} \n                listId={listId} \n              />\n            })}\n          </div>\n        </div>\n\n        <div className=\"task-adding\">\n          <ClickOutside \n            className=\"clickOutSide\" \n            onClickOutside={this.addTaskFormHide}\n          >\n            {!addTaskFormShow && (\n              <Button \n                type=\"button\"\n                className={getBtnClasses('link')}\n                onClick={this.addTaskFormToggle}\n              >\n                <span className=\"button__text\">\n                  Добавьте ещё одну карточку\n                </span>\n              </Button>\n            )}\n\n            {addTaskFormShow && (\n              <form action=\"#\" className=\"task-adding-form\">\n                <TextArea \n                  onKeyPress={this.handleKeyPressAddTask} \n                  ref={this.addTaskTextArea} \n                  className=\"task-adding-form__input\" \n                  placeholder=\"Ввести заголовок для этой карточки\"\n                />\n\n                <Button \n                  type=\"button\" \n                  className={getBtnClasses('primary')}\n                  onClick={this.handleAddTask}\n                >\n                  Добавьте карточку\n                </Button>\n                <Button \n                  type=\"button\" \n                  className={getBtnClasses('close')}\n                  onClick={this.addTaskFormToggle}\n                >\n                  ✖\n                </Button>\n              </form>\n            )}\n          </ClickOutside>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => \n{\n  const list = state.lists.filter((list, i) => {\n    return ownProps.listId === list.id;\n  })\n\n  const name = list[0].name;\n  const listsIds = list[0].tasksId;\n  const listId = list[0].id;\n  const tasksArr = state.tasks;\n  const tasks = listsIds.map(id => {\n    for(let i = 0; i < tasksArr.length; i++) {\n      if(id === tasksArr[i].id) return tasksArr[i];\n    }\n    return false;\n  })\n\n  return { tasks, name, listId };\n    \n}\n\nconst mapDispatchToProps = ({\n  removeList,\n  addTask,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardList)\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BoardList from '../BoardList/BoardList';\nimport Button from '../../UI/Button/Button';\nimport { addList } from '../../actions';\nimport { getBtnClasses } from '../../selectors/getBtnClasses';\nimport './styles.scss';\n\nclass Board extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addListForm: false,\n    }\n    this.listTitleInput = React.createRef();\n  } \n  componentDidUpdate() {\n    if (!this.listTitleInput.current) return;\n    this.listTitleInput.current.focus();\n  }\n\n  openFormAddList = (e) => {\n    \n    e.preventDefault();\n    this.setState({\n      addListForm: !this.state.addListForm,\n    }); \n    return false;\n  }\n\n  handleAddList = (e) => {\n    const { addList } = this.props;\n    addList(this.listTitleInput.current.value);\n    this.openFormAddList(e);\n  }  \n\n  render() {\n\n    const { lists } = this.props;\n    const { addListForm } = this.state;\n\n    return (\n      <div className=\"boards-wrapper\">\n\n        <div className=\"boards\"> \n          {lists.map(({id}) =>\n            <BoardList\n              listId={id} \n              key={id} \n            />\n          )}\n        </div>\n    \n        <div className=\"board-adding\">\n          {!addListForm && (\n            <Button onClick={this.openFormAddList}>\n              + Добавьте ещё одну колонку\n            </Button>\n          )}\n          {addListForm && (\n            <form className=\"board-adding-form\">\n              <input \n                ref={this.listTitleInput} \n                className=\"board-adding-form__input\" \n                placeholder=\"Ввести заголовок списка\" \n              />\n              <Button \n                onClick={this.handleAddList}\n                className={getBtnClasses('primary')}\n              >\n                Добавьте список\n              </Button>\n\n              <Button \n                className={getBtnClasses('close')}\n                onClick={this.openFormAddList}\n              >\n                ✖\n              </Button>\n            </form>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => \n{\n  return { lists: state.lists };\n}\n\nconst mapDispatchToProps = ({\n  addList,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board)\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Page404 = () => <div className=\"page404\">Page not found </div>\r\n\r\nexport default Page404;\r\n","import React from 'react';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Task from '../containers/Task/Task';\r\nimport Board from '../containers/Board/Board';\r\nimport Page404 from '../components/Page404/Page404';\r\nimport './styles.scss';\r\n\r\nconst Main = () => (\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\r\n\t\t<LastLocationProvider>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={Board} />\r\n\t\t\t\t\t<Route path=\"/task/:id\" component={Task} />\r\n\t\t\t\t\t<Route path=\"*\" component={Page404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</LastLocationProvider>\r\n\t</BrowserRouter>)\r\n\r\nexport default Main;\r\n\r\n","let counterTaskId = 6;\r\nconst lists = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          name: action.text,\r\n          tasksId: [],\r\n        }\r\n      ];\r\n    case 'REMOVE_LIST':\r\n      return state.filter(list => list.id !== action.id);\r\n    case 'ADD_TASK':\r\n\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: [...list.tasksId, counterTaskId++]} \r\n        : list                                                                                                             \r\n      )\r\n    case 'REMOVE_TASK':\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: list.tasksId.filter(task => task !== action.taskId)} \r\n        : list                                                                                                             \r\n      )\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lists;\r\n","let counterTaskId = 6;\nconst tasks = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TASK':\n        return [\n          ...state,\n          {\n            id: counterTaskId++,\n            text: action.text,\n          }\n        ];\n      case 'REMOVE_TASK':\n        return state.filter(\n            task => task.id !== action.taskId\n        );\n      default:\n        return state;\n    }\n  };\n  \n  export default tasks;\n  ","import { combineReducers } from 'redux';\r\nimport lists from './lists';\r\nimport tasks from './tasks';\r\n\r\nconst BoardsObj = combineReducers({\r\n  lists,\r\n  tasks,\r\n});\r\n\r\nexport default BoardsObj;\r\n\r\n","const initialStore = {\n  lists: [\n    {\n      id: 1,\n      name: 'list1',\n      tasksId: [4, 2, 3],\n    },\n    {\n      id: 2,\n      name: 'list2',\n      tasksId: [1, 5],\n    },\n  ],\n  tasks: [\n    {\n      id: 1,\n      text: 'task1',\n    },\n    {\n      id: 2,\n      text: 'task2',\n    },\n    {\n      id: 3,\n      text: 'task3',\n    },\n    {\n      id: 4,\n      text: 'task4',\n    },\n    {\n      id: 5,\n      text: 'task5',\n    },\n  ]\n}\n\nexport default initialStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './router';\nimport BoardsObj from './reducers';\nimport initialStore from './initialStore';\n\nconst store = createStore(BoardsObj, initialStore);\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}