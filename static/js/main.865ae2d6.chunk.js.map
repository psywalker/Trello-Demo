{"version":3,"sources":["containers/BoardList/styles.module.scss","containers/Task/styles.module.scss","UI/Button/Button.js","selectors/getBtnClasses.js","containers/Task/TaskSaveForm/TaskSaveForm.js","UI/Title/Title.js","selectors/getTitleClasses.js","containers/Task/Task.js","actions/index.js","selectors/getDataTask.js","containers/Board/BoartAddForm/BoardAddForm.js","containers/BoardList/TaskAddForm/TaskAddForm.js","containers/BoardList/BoardList.js","selectors/getTaskArray.js","selectors/getTasks.js","containers/Board/Board.js","selectors/getBoardListArray.js","components/Page404/Page404.js","router/index.js","reducers/lists.js","actionTypes/acttionTypes.js","reducers/tasks.js","reducers/index.js","initialStore.js","index.js","containers/Task/TaskSaveForm/styles.module.scss","containers/Board/BoartAddForm/styles.module.scss","containers/BoardList/TaskAddForm/styles.module.scss","containers/Board/styles.module.scss"],"names":["module","exports","boardItem","boardItemBtn","boardMenuContainer","boardMenuContainerBtn","boardMenuContainerTitle","boardMenu","boardMenuItemBtn","tasksContainer","taskFormContainer","taskContainer","taskContainerButton","taskMenuContainer","taskMenuContainerInner","fade","taskMenu","taskMenuItem","Button","_ref","children","props","Object","objectWithoutProperties","react_default","a","createElement","getBtnClasses","type","TaskSaveForm","onSubmit","values","react_final_form_es","this","render","handleSubmit","invalid","pristine","action","className","styles","form","autoFocus","name","component","textArea","placeholder","UI_Button_Button","concat","button","onClick","disabled","Component","Title","level","getTitleClasses","size","Task","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","taskMenuHide","setState","taskEditBtnShow","taskMenuToggle","state","handleRemoveTask","e","preventDefault","_this$props","id","listId","removeTask","React","createRef","taskMenuWrapper","current","top","getBoundingClientRect","y","style","_this$props2","text","ref","UI_Title_Title","classes","taskTitle","color","build_default","onClickOutside","Task_TaskSaveForm_TaskSaveForm","mapDispatchToProps","taskId","connect","ownProps","get","getDataTask","BoardAddForm","handleAddList","title","openFormAddList","input","TaskAddForm","handleAddTask","addTaskFormToggle","textarea","BoardList","boardMenuHide","boardMenuShow","boardMenuToggle","addTaskFormHide","addTaskFormShow","handleRemoveList","removeList","value","addTask","_this$props3","tasks","_this$state","map","task","containers_Task_Task","key","getTaskArray","BoardList_TaskAddForm_TaskAddForm","nextTaskId","uuidv4","_ref2","lists","_lists$listId","tasksId","pick","getTasks","Board","addListForm","addList","container","boards","list","containers_BoardList_BoardList","getBoardListArray","BoartAddForm_BoardAddForm","Page404","Main","BrowserRouter","basename","process","dist","Switch","Route","path","exact","arguments","length","undefined","objectSpread","defineProperty","removeListId","omit","toConsumableArray","newListTasksId","filter","removeTaskId","BoardsObj","combineReducers","initialStore","1","2","3","4","5","store","createStore","es","router","document","getElementById"],"mappings":"wHACAA,EAAAC,QAAA,CAAkBC,UAAA,0BAAAC,aAAA,6BAAAC,mBAAA,mCAAAC,sBAAA,sCAAAC,wBAAA,wCAAAC,UAAA,0BAAAC,iBAAA,iCAAAC,eAAA,+BAAAC,kBAAA,mGCAlBV,EAAAC,QAAA,CAAkBU,cAAA,8BAAAC,oBAAA,oCAAAC,kBAAA,kCAAAC,uBAAA,uCAAAC,KAAA,qBAAAC,SAAA,yBAAAC,aAAA,0OCOHC,UALA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAaC,EAAhBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,qBACbK,EAAAC,EAAAC,cAAA,SAAYL,EAASD,KCJVO,EAAgB,SAACC,GAC5B,OAAQA,GACN,IAAK,UACH,MAAO,uBACT,IAAK,QACJ,MAAO,qBACR,IAAK,WACJ,MAAO,wBACR,IAAK,OACJ,MAAO,oBACR,IAAK,OACJ,MAAO,oBACR,IAAK,OACJ,MAAO,oBACR,IAAK,UACJ,MAAO,uBACR,QACE,MAAO,6BCyBEC,6MAlCbC,SAAW,SAACC,6EAMV,OACEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEF,SAAUG,KAAKH,SACfI,OAAQ,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,aAAcC,EAAjBjB,EAAiBiB,QAASC,EAA1BlB,EAA0BkB,SAA1B,OACNb,EAAAC,EAAAC,cAAA,QAAMY,OAAO,IAAIR,SAAUK,EAAcI,UAAWC,IAAOC,MACzDjB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEU,WAAS,EACTC,KAAK,QACLC,UAAU,WACVL,UAAWC,IAAOK,SAClBC,YAAY,wEAGdtB,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAS,GAAAS,OAAKR,IAAOS,OAAZ,KAAAD,OAAsBrB,EAAc,YAC7CuB,QAASf,EACTgB,SAAUd,GAAYD,GAJxB,qEArBegB,aCSZC,UAZD,SAAAlC,GAAmC,IAAhCC,EAAgCD,EAAhCC,SAAUkC,EAAsBnC,EAAtBmC,MAAUjC,EAAYC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,sBAC/C,OAAQmC,GACN,IAAK,KACH,OAAO9B,EAAAC,EAAAC,cAAA,KAAQL,EAAQD,GACzB,IAAK,KACH,OAAOI,EAAAC,EAAAC,cAAA,KAAQL,EAAQD,GACzB,IAAK,KAEL,QACE,OAAOI,EAAAC,EAAAC,cAAA,KAAQL,EAAQD,MCZhBmC,EAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,MACH,MAAO,YACT,IAAK,SAEL,QACE,MAAO,mDCKPC,cAEJ,SAAAA,EAAYpC,GAAO,IAAAqC,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAW,KAAAwB,IACjBC,EAAApC,OAAAsC,EAAA,EAAAtC,CAAAW,KAAAX,OAAAuC,EAAA,EAAAvC,CAAAmC,GAAAK,KAAA7B,KAAMZ,KAcR0C,aAAe,WACbL,EAAKM,SAAS,CAAEC,iBAAiB,KAhBhBP,EAmBnBQ,eAAiB,WAAM,IACbD,EAAoBP,EAAKS,MAAzBF,gBACRP,EAAKM,SAAS,CAAEC,iBAAkBA,KArBjBP,EAwBnBU,iBAAmB,SAACC,GAClBA,EAAEC,iBADsB,IAAAC,EAEWb,EAAKrC,MAAhCmD,EAFgBD,EAEhBC,GAAIC,EAFYF,EAEZE,QAEZC,EAJwBH,EAEJG,YAETF,EAAIC,GACff,EAAKK,gBA3BLL,EAAKS,MAAQ,CACXF,iBAAiB,GAGnBP,EAAK/C,cAAgBgE,IAAMC,YAC3BlB,EAAKmB,gBAAkBF,IAAMC,YAPZlB,oFAWjB,GAAKzB,KAAK4C,gBAAgBC,QAA1B,CACA,IAAMC,EAAM9C,KAAKtB,cAAcmE,QAAQE,wBAAwBC,EAC/DhD,KAAK4C,gBAAgBC,QAAQI,MAAMH,IAAMA,EAAM,uCAkBxC,IAAAI,EAEclD,KAAKZ,MAAlBmD,EAFDW,EAECX,GAAIY,EAFLD,EAEKC,KACJnB,EAAoBhC,KAAKkC,MAAzBF,gBAER,OACEzC,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAO7B,cAAe0E,IAAKpD,KAAKtB,eAC9Ca,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAS,GAAAS,OAAKR,IAAO5B,oBAAZ,KAAAoC,OAAmCrB,EAAc,YAC1DuB,QAASjB,KAAKiC,gBAEd1C,EAAAC,EAAAC,cAAA,KAAGa,UAAU,gBAEff,EAAAC,EAAAC,cAAC4D,EAAD,CACEhC,MAAM,KACNiC,QAAO,GAAAvC,OAAKR,IAAOgD,UAAZ,KAAAxC,OAAyBO,EAAgB,YAEhD/B,EAAAC,EAAAC,cAAA,QAAMwD,MAAO,CAACO,MAAO,QAArB,OAJF,IAI2CjB,EACzChD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMwD,MAAO,CAACO,MAAO,QAArB,SANF,IAM6CL,GAE7C5D,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CACEc,UAAU,eACVoD,eAAgB1D,KAAK8B,cAEpBE,GACCzC,EAAAC,EAAAC,cAAA,OACEa,UAAWC,IAAO3B,kBAClBwE,IAAKpD,KAAK4C,iBAGVrD,EAAAC,EAAAC,cAAA,OACEa,UAAWC,IAAOzB,KAClBmC,QAASjB,KAAKiC,iBAGhB1C,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAO1B,wBAErBU,EAAAC,EAAAC,cAACkE,EAAD,MAEApE,EAAAC,EAAAC,cAAA,MAAIa,UAAWC,IAAOxB,UACpBQ,EAAAC,EAAAC,cAAA,MAAIa,UAAWC,IAAOvB,cACpBO,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAWZ,EAAc,QACzBuB,QAASjB,KAAKmC,kBAEd5C,EAAAC,EAAAC,cAAA,KAAGa,UAAU,qCALf,yFA5EDa,aAsGbyC,EAAsB,CAC1BnB,WC/FwB,SAACoB,EAAQrB,GAAT,MAAqB,CAC7C7C,KAAM,cACNkE,SACArB,YD+FasB,cAVS,SAAC5B,EAAO6B,GAG9B,OE7GyB,SAAC7B,EAAO6B,GACjC,IAAMF,EAASG,IAAID,EAAU,CAAC,QAAS,SAAU,QAAUA,EAASxB,GAGpE,MAAO,CACLA,GAAIsB,EACJV,KAJea,IAAI9B,EAAO,CAAC,QAAD,GAAAnB,OAAa8C,GAAU,UF0G5BI,CAAY/B,EAAO6B,IAU1CH,EAFaE,CAGbtC,oBGpEa0C,6MA7CbrE,SAAW,SAACC,IAEVqE,EAD0B1C,EAAKrC,MAAvB+E,eACMrE,EAAOsE,gFAGd,IAECC,EAAoBrE,KAAKZ,MAAzBiF,gBAER,OACE9E,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEF,SAAUG,KAAKH,SACfI,OAAQ,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,aAAcC,EAAjBjB,EAAiBiB,QAASC,EAA1BlB,EAA0BkB,SAA1B,OACNb,EAAAC,EAAAC,cAAA,QAAMI,SAAUK,EAAeI,UAAWC,IAAOC,MAC/CjB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEU,WAAS,EACTC,KAAK,QACLC,UAAU,QACVhB,KAAK,OACLkB,YAAY,mIACZP,UAAWC,IAAO+D,QAGpB/E,EAAAC,EAAAC,cAACqB,EAAD,CACEG,QAASf,EACTI,UAAWZ,EAAc,WACzBC,KAAK,SACLuB,SAAUd,GAAYD,GAJxB,yFASAZ,EAAAC,EAAAC,cAACqB,EAAD,CACER,UAAWZ,EAAc,SACzBuB,QAASoD,GAFX,qBAlCelD,8BCkDZoD,6MAhDb1E,SAAW,SAACC,IAEV0E,EAD0B/C,EAAKrC,MAAvBoF,eACM1E,EAAOsE,gFAGd,IAECK,EAAsBzE,KAAKZ,MAA3BqF,kBAER,OACElF,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEF,SAAUG,KAAKH,SACfI,OAAQ,SAAAf,GAAA,IAAGgB,EAAHhB,EAAGgB,aAAcC,EAAjBjB,EAAiBiB,QAASC,EAA1BlB,EAA0BkB,SAA1B,OACNb,EAAAC,EAAAC,cAAA,QACEY,OAAO,IACPR,SAAUK,EACVI,UAAWC,IAAOC,MAElBjB,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEU,WAAS,EACTC,KAAK,QACLC,UAAU,WACVL,UAAWC,IAAOmE,SAClB7D,YAAY,6LAGdtB,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAWZ,EAAc,WACzBuB,QAASf,EACTgB,SAAUd,GAAYD,GAJxB,qGAQAZ,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAWZ,EAAc,SACzBuB,QAASwD,GAHX,qBApCctD,+CCOpBwD,cAEJ,SAAAA,EAAYvF,GAAO,IAAAqC,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAW,KAAA2E,IACjBlD,EAAApC,OAAAsC,EAAA,EAAAtC,CAAAW,KAAAX,OAAAuC,EAAA,EAAAvC,CAAAsF,GAAA9C,KAAA7B,KAAMZ,KAORwF,cAAgB,WACdnD,EAAKM,SAAS,CAAE8C,eAAe,KATdpD,EAYnBqD,gBAAkB,WAAM,IACdD,EAAkBpD,EAAKS,MAAvB2C,cACRpD,EAAKM,SAAS,CAAE8C,eAAgBA,KAdfpD,EAiBnBsD,gBAAkB,WAChBtD,EAAKM,SAAS,CAAEiD,iBAAiB,KAlBhBvD,EAqBnBgD,kBAAoB,WAAM,IAChBO,EAAoBvD,EAAKS,MAAzB8C,gBACRvD,EAAKM,SAAS,CAAEiD,iBAAkBA,KAvBjBvD,EA0BnBwD,iBAAmB,SAAC7C,GAAM,IAAAE,EACMb,EAAKrC,MAA5BoD,EADiBF,EACjBE,OAAQ0C,EADS5C,EACT4C,WAEf9C,EAAEC,iBACF6C,EAAW1C,IA9BMf,EAiCnB+C,cAAgB,SAACW,GAAU,IAAAjC,EACEzB,EAAKrC,MAAzBoD,EADkBU,EAClBV,QACP4C,EAFyBlC,EACVkC,SACP5C,EAAQ2C,GAChB1D,EAAKsD,mBAlCLtD,EAAKS,MAAQ,CACX2C,eAAe,EACfG,iBAAiB,GAJFvD,wEAuCV,IAAA4D,EAMHrF,KAAKZ,MAHPsB,EAHK2E,EAGL3E,KACA4E,EAJKD,EAILC,MACA9C,EALK6C,EAKL7C,OALK+C,EAQoCvF,KAAKkC,MAAxC2C,EARDU,EAQCV,cAAeG,EARhBO,EAQgBP,gBACvB,OACEzF,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAOtC,WACrBsB,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CACEc,UAAU,eACVoD,eAAgB1D,KAAK4E,eAErBrF,EAAAC,EAAAC,cAACqB,EAAD,CACER,UAAS,GAAAS,OAAKR,IAAOrC,aAAZ,KAAA6C,OAA4BrB,EAAc,aACnDuB,QAASjB,KAAK8E,kBAGfD,GACCtF,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAOpC,oBAErBoB,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAS,GAAAS,OAAKR,IAAOnC,sBAAZ,KAAA2C,OAAqCrB,EAAc,UAC5DuB,QAASjB,KAAK8E,iBAHhB,UAOAvF,EAAAC,EAAAC,cAAA,QACEa,UAAWC,IAAOlC,yBADpB,4GAKAkB,EAAAC,EAAAC,cAAA,MAAIa,UAAWC,IAAOjC,WACpBiB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAS,GAAAS,OAAKR,IAAOhC,iBAAZ,KAAAwC,OAAgCrB,EAAc,SACvDuB,QAASjB,KAAKiF,kBAHhB,qHAYV1F,EAAAC,EAAAC,cAAC4D,EAAD,CACEhC,MAAM,KACNf,UAAWgB,EAAgB,WAE1BZ,GAIHnB,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAO/B,gBC5GH,SAAC8G,EAAO9C,GAAR,OAC1B8C,EAAME,IAAI,SAAAC,GAAI,OACZlG,EAAAC,EAAAC,cAACiG,EAAD,CACEC,IAAKF,EAAKlD,GACVY,KAAMsC,EAAKtC,KACXZ,GAAIkD,EAAKlD,GACTC,OAAQA,MDuGHoD,CAAaN,EAAO9C,IAIvBjD,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAO9B,mBACrBc,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CACEc,UAAU,eACVoD,eAAgB1D,KAAK+E,kBAEnBC,GACAzF,EAAAC,EAAAC,cAACqB,EAAD,CACEnB,KAAK,SACLW,UAAWZ,EAAc,QACzBuB,QAASjB,KAAKyE,mBAEdlF,EAAAC,EAAAC,cAAA,QAAMa,UAAU,gBAAhB,kJAMH0E,GACCzF,EAAAC,EAAAC,cAACoG,EAAD,CACEpB,kBAAmBzE,KAAKyE,kBACxBD,cAAexE,KAAKwE,0BA3HZrD,aA0IlByC,EAAsB,CAC1BsB,WJhJwB,SAAA3C,GAAE,MAAK,CAC/B5C,KAAM,cACN4C,GAAIA,II+IJ6C,QJ5IqB,SAAC7C,EAAIY,GAAL,MAAe,CACpCxD,KAAM,WACN6C,OAAQD,EACRuD,WAAYC,MACZ5C,UI2IaW,cAVS,SAAC5B,EAAO6B,GAE9B,OElJsB,SAAA7E,EAAA8G,GAA8B,IAA5BC,EAA4B/G,EAA5B+G,MAAOX,EAAqBpG,EAArBoG,MAAS9C,EAAYwD,EAAZxD,OAAY0D,EAC5BD,EAAMzD,GAAvB9B,EAD6CwF,EAC7CxF,KAAMyF,EADuCD,EACvCC,QAGb,MAAO,CAAEb,MAFQjG,OAAOS,OAAOsG,IAAKd,EAAOa,IAEjBzF,OAAM8B,UF6IZ6D,CAASnE,EAAO6B,IAWpCH,EAFaE,CAGba,oBGtJI2B,cAEJ,SAAAA,EAAYlH,GAAO,IAAAqC,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAW,KAAAsG,IACjB7E,EAAApC,OAAAsC,EAAA,EAAAtC,CAAAW,KAAAX,OAAAuC,EAAA,EAAAvC,CAAAiH,GAAAzE,KAAA7B,KAAMZ,KAMRiF,gBAAkB,WAEhB5C,EAAKM,SAAS,CACZwE,aAAc9E,EAAKS,MAAMqE,eAVV9E,EAcnB0C,cAAgB,SAACgB,IAIfqB,EAFoB/E,EAAKrC,MAAjBoH,SAEArB,GACR1D,EAAK4C,mBAjBL5C,EAAKS,MAAQ,CACXqE,aAAa,GAHE9E,wEAsBV,IAECwE,EAAUjG,KAAKZ,MAAf6G,MACAM,EAAgBvG,KAAKkC,MAArBqE,YAER,OACEhH,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAOkG,WAErBlH,EAAAC,EAAAC,cAAA,OAAKa,UAAWC,IAAOmG,QCtCE,SAAAT,GAAK,OACpCA,EAAMT,IAAI,SAAAmB,GAAI,OACZpH,EAAAC,EAAAC,cAACmH,EAAD,CACEpE,OAAQmE,EAAKpE,GACboD,IAAKgB,EAAKpE,ODmCLsE,CAAkBZ,IAGrB1G,EAAAC,EAAAC,cAAA,YACI8G,GACAhH,EAAAC,EAAAC,cAACqB,EAAD,CAAQG,QAASjB,KAAKqE,iBAAtB,6IAIDkC,GACChH,EAAAC,EAAAC,cAACqH,EAAD,CACEzC,gBAAiBrE,KAAKqE,gBACtBF,cAAenE,KAAKmE,yBA7CdhD,aA2DdyC,EAAsB,CAC1B4C,QPnEqB,SAAArD,GAAI,MAAK,CAC9BxD,KAAM,WACN4C,GAAIwD,MACJ5C,UOmEaW,eATS,SAAC5B,GAEvB,MAAO,CAAE+D,MADK5G,OAAOS,OAAOoC,EAAM+D,SAUlCrC,EAFaE,CAGbwC,GEtEaS,WAFC,kBAAMxH,EAAAC,EAAAC,cAAA,OAAKa,UAAU,WAAf,qBCkBP0G,WAbF,kBACZzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAeC,SAAUC,gBACxB5H,EAAAC,EAAAC,cAAC2H,EAAA,qBAAD,KACC7H,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACC9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC7G,UAAW2F,KACjC/G,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOC,KAAK,YAAY5G,UAAWa,IACnCjC,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOC,KAAK,IAAI5G,UAAWoG,0DC+BjBd,GArCD,WAAwB,IAAvB/D,EAAuBuF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIpH,EAAWoH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQtH,EAAOV,MACb,ICToB,WDUlB,OAAON,OAAAuI,GAAA,EAAAvI,CAAA,GACF6C,EADL7C,OAAAwI,GAAA,EAAAxI,CAAA,GAEGgB,EAAOkC,GAAK,CACXA,GAAIlC,EAAOkC,GACX7B,KAAML,EAAO8C,KACbgD,QAAS,MAGf,ICjBuB,cDkBrB,IAAM2B,EAAezH,EAAOkC,GAC5B,OAAOwF,KAAK7F,EAAO,CAAC4F,IACtB,ICvBoB,WDyBlB,IAAInB,EAAOzE,EAAM7B,EAAOmC,QAClB2D,EAAO,GAAApF,OAAA1B,OAAA2I,GAAA,EAAA3I,CAAQsH,EAAKR,SAAb,CAAsB9F,EAAOyF,aAC1C,OAAOzG,OAAAuI,GAAA,EAAAvI,CAAA,GACF6C,EADL7C,OAAAwI,GAAA,EAAAxI,CAAA,GAEGgB,EAAOmC,OAFVnD,OAAAuI,GAAA,EAAAvI,CAAA,GAEwBsH,EAFxB,CAE8BR,cAGhC,IC/BuB,cDgCrB,IAAIjB,EAAahD,EAAM7B,EAAOmC,QACxByF,EAAiB/C,EAAWiB,QAAQ+B,OAAO,SAAAzC,GAAI,OAAIA,IAASpF,EAAOwD,SAEzE,OAAOxE,OAAAuI,GAAA,EAAAvI,CAAA,GACF6C,EADL7C,OAAAwI,GAAA,EAAAxI,CAAA,GAEGgB,EAAOmC,OAFVnD,OAAAuI,GAAA,EAAAvI,CAAA,GAEwB6F,EAFxB,CAEoCiB,QAAS8B,MAG/C,QACE,OAAO/F,IElBIoD,GAlBH,WAAwB,IAAvBpD,EAAuBuF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIpH,EAAWoH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQtH,EAAOV,MACb,IDRkB,WCShB,OAAON,OAAAuI,GAAA,EAAAvI,CAAA,GACF6C,EADL7C,OAAAwI,GAAA,EAAAxI,CAAA,GAEGgB,EAAOyF,WAAa,CACnBvD,GAAIlC,EAAOyF,WACX3C,KAAM9C,EAAO8C,QAGnB,IDfqB,cCgBnB,IAAMgF,EAAe9H,EAAOkC,GAC5B,OAAOwF,KAAK7F,EAAO,CAACiG,IACtB,QACE,OAAOjG,ICXAkG,GALGC,YAAgB,CAChCpC,SACAX,WC+BagD,GArCM,CACnBrC,MAAO,CACLsC,EAAK,CACHhG,GAAI,EACJ7B,KAAM,QACNyF,QAAS,CAAC,EAAG,EAAG,IAElBqC,EAAK,CACHjG,GAAI,EACJ7B,KAAM,QACNyF,QAAS,CAAC,EAAG,KAGjBb,MAAO,CACNiD,EAAK,CACFhG,GAAI,EACJY,KAAM,SAETqF,EAAK,CACFjG,GAAI,EACJY,KAAM,SAERsF,EAAK,CACHlG,GAAI,EACJY,KAAM,SAETuF,EAAK,CACFnG,GAAI,EACJY,KAAM,SAERwF,EAAK,CACHpG,GAAI,EACJY,KAAM,WCxBNyF,GAAQC,YAAYT,GAAWE,IAErCrI,iBACEV,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAUF,MAAOA,IACfrJ,EAAAC,EAAAC,cAACsJ,GAAD,OAEFC,SAASC,eAAe,6BCb1BlL,EAAAC,QAAA,CAAkBwC,KAAA,qBAAAI,SAAA,yBAAAI,OAAA,4CCAlBjD,EAAAC,QAAA,CAAkBwC,KAAA,qBAAA8D,MAAA,2CCAlBvG,EAAAC,QAAA,CAAkBwC,KAAA,qBAAAkE,SAAA,8CCAlB3G,EAAAC,QAAA,CAAkByI,UAAA,0BAAAC,OAAA","file":"static/js/main.865ae2d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boardItem\":\"styles_boardItem__1o__-\",\"boardItemBtn\":\"styles_boardItemBtn__xgQi7\",\"boardMenuContainer\":\"styles_boardMenuContainer__3QNtQ\",\"boardMenuContainerBtn\":\"styles_boardMenuContainerBtn__1rGMB\",\"boardMenuContainerTitle\":\"styles_boardMenuContainerTitle__1urGl\",\"boardMenu\":\"styles_boardMenu__3eUjM\",\"boardMenuItemBtn\":\"styles_boardMenuItemBtn__3Izxx\",\"tasksContainer\":\"styles_tasksContainer__1t5BX\",\"taskFormContainer\":\"styles_taskFormContainer__3KkdH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskContainer\":\"styles_taskContainer__3Xwfp\",\"taskContainerButton\":\"styles_taskContainerButton__OutVj\",\"taskMenuContainer\":\"styles_taskMenuContainer__39lHt\",\"taskMenuContainerInner\":\"styles_taskMenuContainerInner__2Q_Fu\",\"fade\":\"styles_fade__2CCL4\",\"taskMenu\":\"styles_taskMenu__18jWZ\",\"taskMenuItem\":\"styles_taskMenuItem__27z-w\"};","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Button = ({ children, ...props }) => (\r\n  <button {...props}>{ children }</button>\r\n)\r\n\r\n\r\nexport default Button;\r\n","export const getBtnClasses = (type) => {\r\n  switch (type) {\r\n    case 'primary':\r\n      return ' button_type_primary'\r\n    case 'close':\r\n     return ' button_type_close'\r\n    case 'ellipsis':\r\n     return ' button_type_ellipsis'\r\n    case 'long':\r\n     return ' button_type_long'\r\n    case 'link':\r\n     return ' button_type_link'\r\n    case 'dark':\r\n     return ' button_type_dark'\r\n    case 'visible':\r\n     return ' button_type_visible'\r\n    default:\r\n      return ' button';\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport Button from 'UI/Button/Button';\r\nimport { getBtnClasses } from 'selectors/getBtnClasses';\r\nimport styles from './styles.module.scss';\r\n\r\nclass TaskSaveForm extends Component {\r\n\r\n  onSubmit = (values) => {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Form\r\n        onSubmit={this.onSubmit}\r\n        render={({ handleSubmit, invalid, pristine }) => (\r\n          <form action=\"#\" onSubmit={handleSubmit} className={styles.form}>\r\n            <Field \r\n              autoFocus\r\n              name=\"title\"\r\n              component=\"textarea\"\r\n              className={styles.textArea}\r\n              placeholder=\"Ввести текст\"\r\n            />\r\n\r\n            <Button \r\n              type=\"submit\" \r\n              className={`${styles.button} ${getBtnClasses('primary')}`}\r\n              onClick={handleSubmit}\r\n              disabled={pristine || invalid}\r\n            >\r\n              Сохранить\r\n            </Button>\r\n          </form>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskSaveForm;\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Title = ({ children, level, ...props }) => {\r\n  switch (level) {\r\n    case 'h1':\r\n      return <h1 {...props}>{children}</h1>\r\n    case 'h2':\r\n      return <h2 {...props}>{children}</h2>\r\n    case 'h3':\r\n      return <h3 {...props}>{children}</h3>\r\n    default:\r\n      return <h3 {...props}>{children}</h3>\r\n  } \r\n}\r\nexport default Title;\r\n","export const getTitleClasses = (size) => {\r\n  switch (size) {\r\n    case 'big':\r\n      return ' size_big'\r\n    case 'middle':\r\n      return ' size_middle'\r\n    default:\r\n      return ' size_middle';\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport { connect } from 'react-redux';\r\nimport { removeTask } from 'actions';\r\nimport TaskSaveForm from './TaskSaveForm/TaskSaveForm';\r\nimport Button from 'UI/Button/Button';\r\nimport Title from 'UI/Title/Title';\r\nimport { getTitleClasses } from 'selectors/getTitleClasses';\r\nimport { getBtnClasses } from 'selectors/getBtnClasses';\r\nimport { getDataTask } from 'selectors/getDataTask';\r\nimport styles from './styles.module.scss';\r\n\r\nclass Task extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskEditBtnShow: false,\r\n    }\r\n\r\n    this.taskContainer = React.createRef();\r\n    this.taskMenuWrapper = React.createRef();\r\n  } \r\n\r\n  componentDidUpdate() {\r\n    if (!this.taskMenuWrapper.current) return;\r\n    const top = this.taskContainer.current.getBoundingClientRect().y;\r\n    this.taskMenuWrapper.current.style.top = top + 'px';\r\n  }\r\n  taskMenuHide = () => {\r\n    this.setState({ taskEditBtnShow: false });\r\n  };\r\n\r\n  taskMenuToggle = () => {\r\n    const { taskEditBtnShow } = this.state;\r\n    this.setState({ taskEditBtnShow: !taskEditBtnShow });\r\n  };\r\n  \r\n  handleRemoveTask = (e) => {\r\n    e.preventDefault();\r\n    const { id, listId, removeTask } = this.props;\r\n\r\n    removeTask(id, listId);\r\n    this.taskMenuHide();\r\n  };\r\n  render() {\r\n\r\n    const { id, text } = this.props;\r\n    const { taskEditBtnShow } = this.state;\r\n\r\n    return (\r\n      <div className={styles.taskContainer} ref={this.taskContainer}>\r\n        <Button \r\n          type=\"button\" \r\n          className={`${styles.taskContainerButton} ${getBtnClasses('visible')}`}\r\n          onClick={this.taskMenuToggle}\r\n        >\r\n          <i className=\"fas fa-pen\" />\r\n        </Button>\r\n        <Title \r\n          level=\"h3\"\r\n          classes={`${styles.taskTitle} ${getTitleClasses('middle')}`}\r\n        >\r\n          <span style={{color: 'red'}}>id:</span> {id} \r\n          <br/>\r\n          <span style={{color: 'red'}}>text:</span> {text}\r\n        </Title>\r\n        <ClickOutside \r\n          className=\"clickOutSide\" \r\n          onClickOutside={this.taskMenuHide}\r\n        >\r\n          {taskEditBtnShow && (\r\n            <div \r\n              className={styles.taskMenuContainer} \r\n              ref={this.taskMenuWrapper}\r\n            >\r\n\r\n              <div \r\n                className={styles.fade} \r\n                onClick={this.taskMenuToggle} \r\n              />\r\n\r\n              <div className={styles.taskMenuContainerInner}>\r\n\r\n                <TaskSaveForm />\r\n\r\n                <ul className={styles.taskMenu}>\r\n                  <li className={styles.taskMenuItem}>\r\n                    <Button \r\n                      type=\"button\" \r\n                      className={getBtnClasses('dark')}\r\n                      onClick={this.handleRemoveTask}\r\n                    >\r\n                      <i className=\"far fa-file-archive button__icon\" />\r\n                      Архивировать\r\n                    </Button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ClickOutside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => \r\n{\r\n  const getDataTaskObj = getDataTask(state, ownProps);\r\n  return getDataTaskObj;\r\n}\r\n\r\nconst mapDispatchToProps = ({\r\n  removeTask,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task)\r\n","import uuidv4 from 'uuid/v4';\r\n\r\nexport const addList = text => ({\r\n  type: 'ADD_LIST',\r\n  id: uuidv4(),\r\n  text,\r\n})\r\n\r\nexport const removeList = id => ({\r\n  type: 'REMOVE_LIST',\r\n  id: id,\r\n})\r\n\r\nexport const addTask = (id, text) => ({\r\n  type: 'ADD_TASK',\r\n  listId: id,\r\n  nextTaskId: uuidv4(),\r\n  text,\r\n})\r\n\r\nexport const removeTask = (taskId, listId) => ({\r\n  type: 'REMOVE_TASK',\r\n  taskId,\r\n  listId,\r\n})","import get from 'lodash/get'\n\nexport const getDataTask = (state, ownProps) => {\n  const taskId = get(ownProps, ['match', 'params', 'id']) || ownProps.id;\n  const taskText = get(state, ['tasks', `${taskId}`, 'text']);\n\n  return { \n    id: taskId, \n    text: taskText\n  };\n}","import React, { Component } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport Button from 'UI/Button/Button';\r\nimport { getBtnClasses } from 'selectors/getBtnClasses';\r\nimport styles from './styles.module.scss';\r\n\r\nclass BoardAddForm extends Component {\r\n\r\n  onSubmit = (values) => {\r\n    const { handleAddList } = this.props;\r\n    handleAddList(values.title)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { openFormAddList } = this.props;\r\n\r\n    return (\r\n      <Form\r\n        onSubmit={this.onSubmit}\r\n        render={({ handleSubmit, invalid, pristine }) => (\r\n          <form onSubmit={handleSubmit}  className={styles.form}>\r\n            <Field\r\n              autoFocus\r\n              name=\"title\"\r\n              component=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Ввести заголовок списка\"\r\n              className={styles.input}\r\n            />\r\n\r\n            <Button \r\n              onClick={handleSubmit}\r\n              className={getBtnClasses('primary')}\r\n              type=\"submit\"\r\n              disabled={pristine || invalid}\r\n            >\r\n              Добавьте список\r\n            </Button>\r\n\r\n            <Button \r\n              className={getBtnClasses('close')}\r\n              onClick={openFormAddList}\r\n            >\r\n              ✖\r\n            </Button>\r\n          </form>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BoardAddForm;\r\n","import React, { Component } from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport Button from 'UI/Button/Button';\r\nimport { getBtnClasses } from 'selectors/getBtnClasses';\r\nimport styles from './styles.module.scss';\r\n\r\nclass TaskAddForm extends Component {\r\n\r\n  onSubmit = (values) => {\r\n    const { handleAddTask } = this.props;\r\n    handleAddTask(values.title)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { addTaskFormToggle } = this.props;\r\n\r\n    return (\r\n      <Form\r\n        onSubmit={this.onSubmit}\r\n        render={({ handleSubmit, invalid, pristine }) => (\r\n          <form \r\n            action=\"#\" \r\n            onSubmit={handleSubmit} \r\n            className={styles.form}\r\n          >\r\n            <Field \r\n              autoFocus\r\n              name=\"title\"\r\n              component=\"textarea\"\r\n              className={styles.textarea}\r\n              placeholder=\"Ввести заголовок для этой карточки\"\r\n            />\r\n\r\n            <Button \r\n              type=\"submit\" \r\n              className={getBtnClasses('primary')}\r\n              onClick={handleSubmit}\r\n              disabled={pristine || invalid}\r\n            >\r\n              Добавьте карточку\r\n            </Button>\r\n            <Button \r\n              type=\"button\" \r\n              className={getBtnClasses('close')}\r\n              onClick={addTaskFormToggle}\r\n            >\r\n              ✖\r\n            </Button>\r\n          </form>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskAddForm;\r\n","import React, { Component } from 'react';\nimport ClickOutside from 'react-click-outside';\nimport { connect } from 'react-redux';\nimport { removeList, addTask } from 'actions';\nimport TaskAddForm from './TaskAddForm/TaskAddForm';\nimport Button from 'UI/Button/Button';\nimport Title from 'UI/Title/Title';\nimport { getBtnClasses } from 'selectors/getBtnClasses';\nimport { getTitleClasses } from 'selectors/getTitleClasses';\nimport { getTasks } from 'selectors/getTasks';\nimport { getTaskArray } from 'selectors/getTaskArray';\nimport styles from './styles.module.scss';\n\nclass BoardList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardMenuShow: false,\n      addTaskFormShow: false,\n    }\n  }\n\n  boardMenuHide = () => {\n    this.setState({ boardMenuShow: false });\n  };\n\n  boardMenuToggle = () => {\n    const { boardMenuShow } = this.state;\n    this.setState({ boardMenuShow: !boardMenuShow });\n  };\n\n  addTaskFormHide = () => {\n    this.setState({ addTaskFormShow: false });\n  };\n\n  addTaskFormToggle = () => {\n    const { addTaskFormShow } = this.state;\n    this.setState({ addTaskFormShow: !addTaskFormShow });\n  };\n\n  handleRemoveList = (e) => {\n    const {listId, removeList } = this.props;\n\n    e.preventDefault();\n    removeList(listId);\n  }\n\n  handleAddTask = (value) => {\n    const {listId, addTask } = this.props;\n    addTask(listId, value);\n    this.addTaskFormHide();\n  }\n\n  render() {\n\n    const {\n      name,\n      tasks,\n      listId,\n    } = this.props;\n\n    const { boardMenuShow, addTaskFormShow } = this.state;\n    return (\n      <div className={styles.boardItem}>\n        <ClickOutside\n          className=\"clickOutSide\"\n          onClickOutside={this.boardMenuHide}\n        >\n          <Button \n            className={`${styles.boardItemBtn} ${getBtnClasses('ellipsis')}`}\n            onClick={this.boardMenuToggle}\n          />\n\n          {boardMenuShow && (\n            <div className={styles.boardMenuContainer}>\n\n              <Button \n                type=\"button\" \n                className={`${styles.boardMenuContainerBtn} ${getBtnClasses('close')}`}\n                onClick={this.boardMenuToggle}\n              >\n                ✖\n              </Button>\n              <span \n                className={styles.boardMenuContainerTitle}\n              >\n                Действие со списком\n              </span>\n              <ul className={styles.boardMenu}>\n                <li>\n                  <Button \n                    type=\"button\"\n                    className={`${styles.boardMenuItemBtn} ${getBtnClasses('long')}`}\n                    onClick={this.handleRemoveList}\n                  >\n                    Архивировать список\n                  </Button>\n                </li>\n              </ul>\n            </div>\n          )}\n        </ClickOutside>\n        <Title \n          level=\"h3\"\n          className={getTitleClasses('middle')}\n        >\n          {name}\n        </Title>\n\n        \n        <div className={styles.tasksContainer}>\n          {getTaskArray(tasks, listId)}\n        </div>\n        \n\n        <div className={styles.taskFormContainer}>\n          <ClickOutside \n            className=\"clickOutSide\" \n            onClickOutside={this.addTaskFormHide}\n          >\n            {!addTaskFormShow && (\n              <Button \n                type=\"button\"\n                className={getBtnClasses('link')}\n                onClick={this.addTaskFormToggle}\n              >\n                <span className=\"button__text\">\n                  Добавьте ещё одну карточку\n                </span>\n              </Button>\n            )}\n\n            {addTaskFormShow && (\n              <TaskAddForm \n                addTaskFormToggle={this.addTaskFormToggle}\n                handleAddTask={this.handleAddTask}\n              />\n            )}\n          </ClickOutside>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const getTasksObj = getTasks(state, ownProps);\n  return getTasksObj;\n}\n\nconst mapDispatchToProps = ({\n  removeList,\n  addTask,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardList)\n\n","import React from 'react';\r\nimport Task from '../containers/Task/Task';\r\n\r\nexport const getTaskArray = (tasks, listId) => (\r\n  tasks.map(task => \r\n    <Task \r\n      key={task.id} \r\n      text={task.text} \r\n      id={task.id} \r\n      listId={listId} \r\n    />\r\n  )\r\n)\r\n","import pick from 'lodash/pick'\n\nexport const getTasks = ({lists, tasks}, {listId}) => {\n  const {name, tasksId} = lists[listId];\n  const newTasks = Object.values(pick(tasks, tasksId));\n\n  return { tasks: newTasks, name, listId }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from 'UI/Button/Button';\nimport BoardAddForm from './BoartAddForm/BoardAddForm';\nimport { addList } from 'actions';\nimport { getBoardListArray } from 'selectors/getBoardListArray';\nimport styles from './styles.module.scss';\n\n\nclass Board extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      addListForm: false,\n    }\n  } \n\n  openFormAddList = () => {\n\n    this.setState({\n      addListForm: !this.state.addListForm,\n    }); \n  }\n\n  handleAddList = (value) => {\n    \n    const { addList } = this.props;\n\n    addList(value);\n    this.openFormAddList();\n  }  \n\n  render() {\n\n    const { lists } = this.props;\n    const { addListForm } = this.state;\n\n    return (\n      <div className={styles.container}>\n\n        <div className={styles.boards}> \n          {getBoardListArray(lists)}\n        </div>\n    \n        <div>\n          {!addListForm && (\n            <Button onClick={this.openFormAddList}>\n              + Добавьте ещё одну колонку\n            </Button>\n          )}\n          {addListForm && (\n            <BoardAddForm \n              openFormAddList={this.openFormAddList}\n              handleAddList={this.handleAddList}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const lists = Object.values(state.lists)\n  return { lists };\n}\n\nconst mapDispatchToProps = ({\n  addList,\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Board)\n","import React from 'react';\r\nimport BoardList from '../containers/BoardList/BoardList';\r\n\r\nexport const getBoardListArray = lists => (\r\n  lists.map(list =>\r\n    <BoardList\r\n      listId={list.id} \r\n      key={list.id} \r\n    />\r\n  )\r\n)\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nconst Page404 = () => <div className=\"page404\">Page not found </div>\r\n\r\nexport default Page404;\r\n","import React from 'react';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Task from '../containers/Task/Task';\r\nimport Board from '../containers/Board/Board';\r\nimport Page404 from '../components/Page404/Page404';\r\nimport './styles.scss';\r\n\r\nconst Main = () => (\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\r\n\t\t<LastLocationProvider>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={Board} />\r\n\t\t\t\t\t<Route path=\"/task/:id\" component={Task} />\r\n\t\t\t\t\t<Route path=\"*\" component={Page404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</LastLocationProvider>\r\n\t</BrowserRouter>)\r\n\r\nexport default Main;\r\n\r\n","\r\nimport omit from 'lodash/omit'\r\nimport { \r\n  ADD_TASK, \r\n  REMOVE_TASK, \r\n  ADD_LIST, \r\n  REMOVE_LIST \r\n} from '../actionTypes/acttionTypes'\r\n\r\nconst lists = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        [action.id]: {\r\n          id: action.id,\r\n          name: action.text,\r\n          tasksId: [],\r\n        },\r\n      };\r\n    case REMOVE_LIST:\r\n      const removeListId = action.id;\r\n      return omit(state, [removeListId]);\r\n    case ADD_TASK:\r\n\r\n      let list = state[action.listId];\r\n      const tasksId = [ ...list.tasksId, action.nextTaskId ];\r\n      return {\r\n        ...state,\r\n        [action.listId]: { ...list, tasksId },\r\n      };\r\n\r\n    case REMOVE_TASK:\r\n      let removeList = state[action.listId];\r\n      const newListTasksId = removeList.tasksId.filter(task => task !== action.taskId)\r\n\r\n      return {\r\n        ...state,\r\n        [action.listId]: { ...removeList, tasksId: newListTasksId },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lists;\r\n","export const ADD_TASK = 'ADD_TASK'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const ADD_LIST = 'ADD_LIST'\nexport const REMOVE_LIST = 'REMOVE_LIST'\n","import omit from 'lodash/omit'\nimport { \n  ADD_TASK, \n  REMOVE_TASK\n} from '../actionTypes/acttionTypes'\n\nconst tasks = (state = [], action) => {\n    switch (action.type) {\n      case ADD_TASK:\n        return {\n          ...state,\n          [action.nextTaskId]: {\n            id: action.nextTaskId,\n            text: action.text,\n          }\n        };\n      case REMOVE_TASK:\n        const removeTaskId = action.id;\n        return omit(state, [removeTaskId]);\n      default:\n        return state;\n    }\n  };\n  \n  export default tasks;\n  ","import { combineReducers } from 'redux';\r\nimport lists from './lists';\r\nimport tasks from './tasks';\r\n\r\nconst BoardsObj = combineReducers({\r\n  lists,\r\n  tasks,\r\n});\r\n\r\nexport default BoardsObj;\r\n\r\n","const initialStore = {\n  lists: {\n    '1': {\n      id: 1,\n      name: 'list1',\n      tasksId: [4, 2, 3],\n    },\n    '2': {\n      id: 2,\n      name: 'list2',\n      tasksId: [1, 5],\n    }\n  },\n  tasks: {\n   '1': {\n      id: 1,\n      text: 'task1',\n    },\n   '2': {\n      id: 2,\n      text: 'task2',\n    },\n    '3': {\n      id: 3,\n      text: 'task3',\n    },\n   '4': {\n      id: 4,\n      text: 'task4',\n    },\n    '5': {\n      id: 5,\n      text: 'task5',\n    },\n  }\n}\n\nexport default initialStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './router';\nimport BoardsObj from './reducers';\nimport initialStore from './initialStore';\n\nconst store = createStore(BoardsObj, initialStore);\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1TcvD\",\"textArea\":\"styles_textArea__ON3gz\",\"button\":\"styles_button__3yU8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__IAla-\",\"input\":\"styles_input__3eBmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1GDr5\",\"textarea\":\"styles_textarea__3NlXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3Gf7N\",\"boards\":\"styles_boards__3D3eD\"};"],"sourceRoot":""}