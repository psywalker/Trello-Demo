{"version":3,"sources":["components/Task/Task.js","actions/index.js","containers/TaskContainer.js","components/BoardsList/BoardsList.js","containers/BoardsListContainer.js","components/Boards/Boards.js","containers/BoardsContainer.js","router/index.js","reducers/lists.js","reducers/tasks.js","reducers/index.js","initialStore.js","index.js"],"names":["Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","taskMenuHide","setState","taskEditBtnShow","taskMenuToggle","state","handleEditTask","e","preventDefault","handleRemoveTask","_this$props","id","listId","removeTask","taskContainer","React","createRef","taskMenuWrapper","taskMenuTextArea","current","focus","top","getBoundingClientRect","y","style","_this$props2","text","isTaskEditBtnShow","react_default","a","createElement","className","ref","onClick","build_default","onClickOutside","action","Component","nextListId","connect","ownProps","dispatch","taskId","type","BoardsList","boardMenuHide","boardMenuShow","boardMenuToggle","addTaskFormHide","addTaskFormShow","addTaskFormToggle","handleKeyPressAddTask","addTask","key","addTaskTextArea","value","handleRemoveList","removeList","handleAddTask","_this$props3","_this$props4","name","tasks","_this$state","boardMenuShowOpen","map","task","TaskContainer","onKeyPress","placeholder","list","lists","filter","i","listsIds","tasksId","tasksArr","length","Boards","openFormAddList","addListForm","handleAddList","addList","listTitleInput","BoardsListContainer","Main","BrowserRouter","basename","process","dist","Switch","Route","path","exact","component","BoardsContainer","counterTaskId","arguments","undefined","concat","toConsumableArray","objectSpread","BoardsObj","combineReducers","initialStore","store","createStore","render","es","router","document","getElementById"],"mappings":"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","file":"static/js/main.10723b4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport './styles.scss';\r\n\r\nclass Task extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskEditBtnShow: false,\r\n    }\r\n\r\n    this.taskContainer = React.createRef();\r\n    this.taskMenuWrapper = React.createRef();\r\n    this.taskMenuTextArea = React.createRef();\r\n    \r\n  } \r\n\r\n  componentDidUpdate() {\r\n    if (!this.taskMenuTextArea.current && !this.taskMenuWrapper.current) return;\r\n    this.taskMenuTextArea.current.focus();\r\n    const top = this.taskContainer.current.getBoundingClientRect().y;\r\n    this.taskMenuWrapper.current.style.top = top + 'px';\r\n  }\r\n  taskMenuHide = () => {\r\n    this.setState({ taskEditBtnShow: false });\r\n  };\r\n\r\n  taskMenuToggle = () => {\r\n    const { taskEditBtnShow } = this.state;\r\n    this.setState({ taskEditBtnShow: !taskEditBtnShow });\r\n  };\r\n  \r\n  handleEditTask = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleRemoveTask = (e) => {\r\n    e.preventDefault();\r\n    const { id, listId, removeTask } = this.props;\r\n\r\n    removeTask(id, listId);\r\n    this.taskMenuHide();\r\n  };\r\n  render() {\r\n\r\n    const { id, text } = this.props;\r\n    const { taskEditBtnShow } = this.state;\r\n\r\n    let isTaskEditBtnShow = taskEditBtnShow ? 'task__edit-btn task__edit-btn_show' : 'task__edit-btn ';\r\n\r\n    return (\r\n      <div className=\"task\" ref={this.taskContainer}>\r\n        <button \r\n          className={isTaskEditBtnShow} \r\n          onClick={this.taskMenuToggle}\r\n        >\r\n          <span>\r\n            <i className=\"fas fa-pen\" />\r\n          </span>\r\n        </button>\r\n        \r\n        <h2 className=\"task__title\">{id}: {text}</h2>\r\n\r\n        <ClickOutside \r\n          className=\"clickOutSide\" \r\n          onClickOutside={this.taskMenuHide}\r\n        >\r\n          {taskEditBtnShow && (\r\n            <div \r\n              className=\"task-menu-wrapper\" \r\n              ref={this.taskMenuWrapper}\r\n            >\r\n\r\n              <div \r\n                className=\"task-menu-wrapper__fade\" \r\n                onClick={this.taskMenuToggle} \r\n              />\r\n\r\n              <div className=\"task-menu-wrapper__inner\">\r\n\r\n                <form action=\"#\" className=\"task-menu-fields\">\r\n                  <textarea \r\n                    className=\"task-menu-fields__textarea\" \r\n                    ref={this.taskMenuTextArea} \r\n                  />\r\n                  <button \r\n                    className=\"task-menu-fields__btn\" \r\n                    onClick={this.handleEditTask}\r\n                  >\r\n                    Сохранить\r\n                  </button>\r\n                </form>\r\n\r\n                <ul className=\"task-menu\">\r\n                  <li className=\"task-menu__item\">\r\n                    <button className=\"task-menu__btn\" onClick={this.handleRemoveTask}>\r\n                      <i className=\"far fa-file-archive\" />\r\n                      Архивировать\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ClickOutside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;","let nextListId = 3\r\n\r\nexport const addList = text => ({\r\n  type: 'ADD_LIST',\r\n  id: nextListId++,\r\n  text,\r\n})\r\n\r\nexport const removeList = id => ({\r\n  type: 'REMOVE_LIST',\r\n  id: id,\r\n})\r\n\r\nexport const addTask = (id, text) => ({\r\n  type: 'ADD_TASK',\r\n  listId: id,\r\n  text,\r\n})\r\n\r\nexport const removeTask = (taskId, listId) => ({\r\n  type: 'REMOVE_TASK',\r\n  taskId,\r\n  listId,\r\n})","import { connect } from 'react-redux';\r\nimport Task from '../components/Task/Task';\r\nimport { removeTask } from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => \r\n{\r\n  return { \r\n    id: ownProps.id, \r\n    text: ownProps.text, \r\n    listId: ownProps.listId,\r\n  };\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeTask: (taskId, listId) => dispatch(removeTask(taskId, listId)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task)\r\n","import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport TaskContainer from '../../containers/TaskContainer';\r\nimport './styles.scss';\r\nimport '../Task/styles.scss';\r\n\r\nclass BoardsList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardMenuShow: false,\r\n      addTaskFormShow: false,\r\n    }\r\n\r\n    this.addTaskTextArea = React.createRef();\r\n\r\n  }\r\n  componentDidUpdate() {\r\n    if (!this.addTaskTextArea.current) return;\r\n    this.addTaskTextArea.current.focus();\r\n  }\r\n  boardMenuHide = () => {\r\n    this.setState({ boardMenuShow: false });\r\n  };\r\n\r\n  boardMenuToggle = () => {\r\n    const { boardMenuShow } = this.state;\r\n    this.setState({ boardMenuShow: !boardMenuShow });\r\n  };\r\n\r\n  addTaskFormHide = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ addTaskFormShow: false });\r\n  };\r\n\r\n  addTaskFormToggle = () => {\r\n    const { addTaskFormShow } = this.state;\r\n    this.setState({ addTaskFormShow: !addTaskFormShow });\r\n  };\r\n\r\n  handleKeyPressAddTask = (e) => {\r\n    const { listId, addTask } = this.props;\r\n\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      addTask(listId, this.addTaskTextArea.current.value);\r\n      this.setState({ addTaskFormShow: false });\r\n    }\r\n  };\r\n\r\n  handleRemoveList = (e) => {\r\n    const {listId, removeList } = this.props;\r\n    e.preventDefault();\r\n    removeList(listId);\r\n  }\r\n\r\n  handleAddTask = (e) => {\r\n    const {listId, addTask } = this.props;\r\n    this.addTaskFormHide(e);\r\n    addTask(listId, this.addTaskTextArea.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      name,\r\n      tasks,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const { boardMenuShow, addTaskFormShow } = this.state;\r\n    let boardMenuShowOpen = boardMenuShow ? 'board__menu-toggle board__menu-toggle_open' : 'board__menu-toggle ';\r\n\r\n    return (\r\n      <div className=\"board boards__item\">\r\n        <ClickOutside\r\n          className=\"clickOutSide\"\r\n          onClickOutside={this.boardMenuHide}\r\n        >\r\n          <button \r\n            className={boardMenuShowOpen} \r\n            onClick={this.boardMenuToggle}\r\n          >\r\n            <span>...</span>\r\n          </button>\r\n\r\n          {boardMenuShow && (\r\n            <div className=\"board-menu-wrapper\">\r\n              <button \r\n                className=\"board-menu-wrapper__close\" \r\n                onClick={this.boardMenuToggle}\r\n              >\r\n                ✕\r\n              </button>\r\n              <h2 className=\"board-menu-wrapper__title\">Действие со списком</h2>\r\n\r\n              <ul className=\"board-menu\">\r\n                <li className=\"board-menu__item\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"board-menu__link\" \r\n                    onClick={this.handleRemoveList}\r\n                  >\r\n                    Архивировать список\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </ClickOutside>\r\n        <h2 className=\"board__title\">{name}</h2>\r\n\r\n        <div className=\"tasks tasks-wrapper\">\r\n          <div className=\"tasks-wrapper__inner\">\r\n            {tasks.map(task => {\r\n              return <TaskContainer \r\n                key={task.id} \r\n                text={task.text} \r\n                id={task.id} \r\n                listId={listId} \r\n              />\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"task-adding\">\r\n          <ClickOutside \r\n            className=\"clickOutSide\" \r\n            onClickOutside={this.addTaskFormHide}\r\n          >\r\n            {!addTaskFormShow && (\r\n              <button \r\n                className=\"task-adding__btn\" \r\n                onClick={this.addTaskFormToggle}\r\n              >\r\n                <span className=\"task-adding__btn_plus\">+</span> \r\n                <span className=\"task-adding__btn_text\">Добавьте ещё одну карточку</span>\r\n              </button>\r\n            )}\r\n\r\n            {addTaskFormShow && (\r\n              <form action=\"#\" className=\"task-adding-form\">\r\n                <textarea \r\n                  onKeyPress={this.handleKeyPressAddTask} \r\n                  ref={this.addTaskTextArea} \r\n                  className=\"task-adding-form__input\" \r\n                  placeholder=\"Ввести заголовок для этой карточки\"\r\n                />\r\n                <button \r\n                  className=\"task-adding-form__btn_add\" \r\n                  onClick={this.handleAddTask} \r\n                >\r\n                  Добавьте карточку\r\n                </button>\r\n                <button \r\n                  className=\"task-adding-form__btn_close\" \r\n                  onClick={this.addTaskFormToggle}\r\n                >\r\n                  ✖\r\n                </button>\r\n              </form>\r\n            )}\r\n          </ClickOutside>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardsList;","import { connect } from 'react-redux';\nimport BoardsList from '../components/BoardsList/BoardsList';\nimport { removeList } from '../actions';\nimport { addTask } from '../actions';\n\nconst mapStateToProps = (state, ownProps) => \n{\n  const list = state.lists.filter((list, i) => {\n    return ownProps.listId === list.id;\n  })\n\n  const name = list[0].name;\n  const listsIds = list[0].tasksId;\n  const listId = list[0].id;\n  const tasksArr = state.tasks;\n  const tasks = listsIds.map(id => {\n    for(let i = 0; i < tasksArr.length; i++) {\n      if(id === tasksArr[i].id) return tasksArr[i];\n    }\n    return false;\n  })\n\n  return { tasks, name, listId };\n    \n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeList: id => dispatch(removeList(id)),\n  addTask: (id, text) => dispatch(addTask(id, text)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardsList)\n","import React, { Component } from 'react';\r\nimport BoardsListContainer from '../../containers/BoardsListContainer';\r\nimport './styles.scss';\r\n\r\nclass Boards extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addListForm: false,\r\n    }\r\n    this.listTitleInput = React.createRef();\r\n  } \r\n  componentDidUpdate() {\r\n    if (!this.listTitleInput.current) return;\r\n    this.listTitleInput.current.focus();\r\n  }\r\n\r\n  openFormAddList = (e) => {\r\n    \r\n    e.preventDefault();\r\n    this.setState({\r\n      addListForm: !this.state.addListForm,\r\n    }); \r\n    return false;\r\n  }\r\n\r\n  handleAddList = (e) => {\r\n    const { addList } = this.props;\r\n    addList(this.listTitleInput.current.value);\r\n    this.openFormAddList(e);\r\n  }  \r\n\r\n  render() {\r\n\r\n    const { lists } = this.props;\r\n    const { addListForm } = this.state;\r\n\r\n    return (\r\n      <div className=\"boards-wrapper\">\r\n\r\n        <div className=\"boards\"> \r\n          {lists.map(list =>\r\n            <BoardsListContainer \r\n              listId={list.id} \r\n              key={list.id} \r\n            />\r\n          )}\r\n        </div>\r\n    \r\n        <div className=\"board-adding\">\r\n          {!addListForm && (\r\n            <button \r\n              className=\"board-adding__btn\" \r\n              onClick={this.openFormAddList}\r\n            >\r\n              + Добавьте ещё одну колонку\r\n            </button>\r\n          )}\r\n          {addListForm && (\r\n            <form className=\"board-adding-form\">\r\n              <input \r\n                ref={this.listTitleInput} \r\n                className=\"board-adding-form__input\" \r\n                placeholder=\"Ввести заголовок списка\" \r\n              />\r\n              <button \r\n                className=\"board-adding-form__btn_add\" \r\n                onClick={this.handleAddList}\r\n              >\r\n                Добавьте список\r\n              </button>\r\n              <button \r\n                className=\"board-adding-form__btn_close\" \r\n                onClick={this.openFormAddList}\r\n              >\r\n                ✖\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boards;\r\n","import { connect } from 'react-redux';\nimport Boards from '../components/Boards/Boards';\nimport { addList } from '../actions';\n\nconst mapStateToProps = (state) => \n{\n  return { lists: state.lists };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addList: text => dispatch(addList(text)),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Boards)\n","import React from 'react';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Task from '../components/Task/Task';\r\nimport BoardsContainer from '../containers/BoardsContainer';\r\nimport './styles.scss';\r\n\r\nconst Main = () => (\r\n\t<BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\r\n\t\t<LastLocationProvider>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={BoardsContainer} />\r\n\t\t\t\t\t<Route path=\"/task\" component={Task} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</LastLocationProvider>\r\n\t</BrowserRouter>)\r\n\r\nexport default Main;","let counterTaskId = 6;\r\nconst lists = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          name: action.text,\r\n          tasksId: [],\r\n        }\r\n      ];\r\n    case 'REMOVE_LIST':\r\n      return state.filter(list => list.id !== action.id);\r\n    case 'ADD_TASK':\r\n\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: [...list.tasksId, counterTaskId++]} \r\n        : list                                                                                                             \r\n      )\r\n    case 'REMOVE_TASK':\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: list.tasksId.filter(task => task !== action.taskId)} \r\n        : list                                                                                                             \r\n      )\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lists;","let counterTaskId = 6;\n\nconst tasks = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TASK':\n        return [\n          ...state,\n          {\n            id: counterTaskId++,\n            text: action.text,\n          }\n        ];\n      case 'REMOVE_TASK':\n        return state.filter(\n            task => task.id !== action.taskId\n        );\n      default:\n        return state;\n    }\n  };\n  \n  export default tasks;","import { combineReducers } from 'redux';\r\nimport lists from './lists';\r\nimport tasks from './tasks';\r\n\r\nconst BoardsObj = combineReducers({\r\n  lists,\r\n  tasks,\r\n});\r\n\r\nexport default BoardsObj;\r\n","const initialStore = {\n  lists: [\n    {\n      id: 1,\n      name: 'list1',\n      tasksId: [4, 2, 3],\n    },\n    {\n      id: 2,\n      name: 'list2',\n      tasksId: [1, 5],\n    },\n  ],\n  tasks: [\n    {\n      id: 1,\n      text: 'task1',\n    },\n    {\n      id: 2,\n      text: 'task2',\n    },\n    {\n      id: 3,\n      text: 'task3',\n    },\n    {\n      id: 4,\n      text: 'task4',\n    },\n    {\n      id: 5,\n      text: 'task5',\n    },\n  ]\n}\n\nexport default initialStore","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Main from './router';\nimport BoardsObj from './reducers';\nimport initialStore from './initialStore';\n\nconst store = createStore(BoardsObj, initialStore);\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}