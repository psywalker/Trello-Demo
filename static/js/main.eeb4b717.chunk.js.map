{"version":3,"sources":["components/Task/Task.js","actions/index.js","containers/TaskContainer.js","components/BoardsList/BoardsList.js","containers/BoardsListContainer.js","components/Boards/Boards.js","containers/BoardsContainer.js","router/index.js","reducers/lists.js","reducers/tasks.js","reducers/index.js","initialStore.js","index.js"],"names":["Task","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","taskMenuHide","setState","taskEditBtnShow","taskMenuToggle","state","handleEditTask","e","preventDefault","handleRemoveTask","_this$props","id","listId","removeTask","taskTextArea","taskMenuWrapper","focus","top","taskRef","getBoundingClientRect","y","style","_this2","_this$props2","text","react_default","a","createElement","className","ref","el","onClick","build_default","onClickOutside","action","Component","nextListId","connect","ownProps","dispatch","taskId","type","BoardsList","boardMenuHide","boardMenuShow","boardMenuToggle","addTaskFormHide","addTaskFormShow","addTaskFormToggle","handleKeyPressAddTask","addTask","key","addTaskTextArea","value","name","tasks","removeList","_this$state","map","task","i","TaskContainer","onKeyPress","placeholder","list","lists","filter","listsIds","tasksId","tasksArr","length","Boards","openFormAddList","addListForm","inputTitle","addList","BoardsListContainer","Main","BrowserRouter","basename","process","dist","Switch","Route","path","exact","component","BoardsContainer","counterTaskId","arguments","undefined","concat","toConsumableArray","objectSpread","BoardsObj","combineReducers","initialStore","store","createStore","render","es","router","document","getElementById"],"mappings":"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","file":"static/js/main.eeb4b717.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport './tasks.scss';\r\n\r\nclass Task extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskEditBtnShow: false,\r\n    }\r\n  } \r\n\r\n  componentDidUpdate() {\r\n    if (!this.taskTextArea && !this.taskMenuWrapper) return;\r\n    this.taskTextArea.focus();\r\n    const top = this.taskRef.getBoundingClientRect().y;\r\n    this.taskMenuWrapper.style.top = top + 'px';\r\n  }\r\n  taskMenuHide = () => {\r\n    this.setState({ taskEditBtnShow: false });\r\n  };\r\n\r\n  taskMenuToggle = () => {\r\n    const { taskEditBtnShow } = this.state;\r\n    this.setState({ taskEditBtnShow: !taskEditBtnShow });\r\n  };\r\n  \r\n  handleEditTask = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleRemoveTask = (e) => {\r\n    e.preventDefault();\r\n    const { id, listId, removeTask } = this.props;\r\n\r\n    removeTask(id, listId)\r\n  };\r\n  render() {\r\n\r\n    const { id, text } = this.props;\r\n    const { taskEditBtnShow } = this.state;\r\n    return (\r\n      <div className=\"task\" ref={el => this.taskRef = el}>\r\n        <button className={'task__edit-btn ' + (taskEditBtnShow ? 'task__edit-btn_show' : '')} onClick={this.taskMenuToggle}>\r\n          <span><i className=\"fas fa-pen\"></i></span>\r\n        </button>\r\n        \r\n        <h2 className=\"task__title\">{id}: {text}</h2>\r\n\r\n        <ClickOutside className=\"clickOutSide\" onClickOutside={this.taskMenuHide}>\r\n          { taskEditBtnShow && (<div className=\"task-menu-wrapper\" ref={el => this.taskMenuWrapper = el}>\r\n\r\n            <div className=\"task-menu-wrapper__fade\" onClick={this.taskMenuToggle}></div>\r\n\r\n            <div className=\"task-menu-wrapper__inner\">\r\n\r\n              <form action=\"#\" className=\"task-menu-fields\">\r\n                <textarea className=\"task-menu-fields__textarea\" ref={el => this.taskTextArea = el}></textarea>\r\n                <button className=\"task-menu-fields__btn\" onClick={this.handleEditTask}>Сохранить</button>\r\n              </form>\r\n\r\n              <ul className=\"task-menu\">\r\n                <li className=\"task-menu__item\">\r\n                  <button className=\"task-menu__btn\" onClick={(e) => {\r\n                      this.handleRemoveTask(e);\r\n                      this.taskMenuHide();\r\n                    }}>\r\n                    <i className=\"far fa-file-archive\"></i>\r\n                    Архивировать\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n\r\n            </div>\r\n          </div>)}\r\n        </ClickOutside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;","let nextListId = 3\r\n\r\nexport const addList = text => ({\r\n  type: 'ADD_LIST',\r\n  id: nextListId++,\r\n  text\r\n})\r\n\r\nexport const removeList = id => ({\r\n  type: 'REMOVE_LIST',\r\n  id: id,\r\n})\r\n\r\nexport const addTask = (id, text) => ({\r\n  type: 'ADD_TASK',\r\n  listId: id,\r\n  text\r\n})\r\n\r\nexport const removeTask = (taskId, listId) => ({\r\n  type: 'REMOVE_TASK',\r\n  taskId,\r\n  listId\r\n})","import { connect } from 'react-redux'\r\nimport Task from '../components/Task/Task'\r\nimport { removeTask } from '../actions'\r\n\r\nconst mapStateToProps = (state, ownProps) => \r\n{\r\n    //console.log('1::', state)\r\n    return { id: ownProps.id, text: ownProps.text, listId: ownProps.listId }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    removeTask: (taskId, listId) => dispatch(removeTask(taskId, listId))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Task)\r\n","import React, { Component } from 'react';\r\nimport ClickOutside from 'react-click-outside';\r\nimport TaskContainer from '../../containers/TaskContainer'\r\nimport './board.scss';\r\nimport '../Task/tasks.scss';\r\n\r\nclass BoardsList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boardMenuShow: false,\r\n            addTaskFormShow: false,\r\n        }\r\n    } \r\n    componentDidUpdate() {\r\n        if (!this.addTaskTextArea) return;\r\n        this.addTaskTextArea.focus()\r\n    }\r\n    boardMenuHide = () => {\r\n        this.setState({ boardMenuShow: false });\r\n    };\r\n    \r\n    boardMenuToggle = () => {\r\n        const { boardMenuShow } = this.state;\r\n        this.setState({ boardMenuShow: !boardMenuShow });\r\n    };\r\n\r\n    addTaskFormHide = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ addTaskFormShow: false });\r\n    };\r\n    \r\n    addTaskFormToggle = () => {\r\n        const { addTaskFormShow } = this.state;\r\n        this.setState({ addTaskFormShow: !addTaskFormShow });\r\n    };\r\n\r\n    handleKeyPressAddTask = (e) => {\r\n        const { listId, addTask } = this.props;\r\n        if(e.key === 'Enter'){\r\n            e.preventDefault();\r\n            addTask(listId, this.addTaskTextArea.value);\r\n            this.setState({ addTaskFormShow: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { name, tasks, removeList, listId, addTask } = this.props;\r\n        const { boardMenuShow, addTaskFormShow } = this.state;\r\n      \r\n        return (\r\n            <div className=\"board boards__item\" >\r\n                <ClickOutside className=\"clickOutSide\" onClickOutside={this.boardMenuHide}>\r\n                    <button className={'board__menu-toggle ' + (boardMenuShow ? 'board__menu-toggle_open' : '')} onClick={this.boardMenuToggle}>\r\n                        <span>...</span>\r\n                    </button>\r\n\r\n                    { boardMenuShow && (<div className=\"board-menu-wrapper\">\r\n                        <button className=\"board-menu-wrapper__close\" onClick={this.boardMenuToggle}>✕</button>\r\n                        <h2 className=\"board-menu-wrapper__title\">Действие со списком</h2>   \r\n\r\n                        <ul className=\"board-menu\">\r\n                            <li className=\"board-menu__item\">\r\n                                <button type=\"button\" className=\"board-menu__link\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    removeList(listId)}\r\n                                    }>Архивировать список</button>\r\n                            </li>\r\n                        </ul>              \r\n                    </div>)}\r\n                </ClickOutside>\r\n                <h2 className=\"board__title\">{name}</h2>\r\n\r\n                <div className=\"tasks tasks-wrapper\">\r\n                    <div className=\"tasks-wrapper__inner\">\r\n                        {tasks.map((task, i) => {\r\n                           return <TaskContainer key={i} text={task.text} id={task.id} listId={listId} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"task-adding\">\r\n                <ClickOutside className=\"clickOutSide\" onClickOutside={this.addTaskFormHide}>\r\n                    { !addTaskFormShow && (<button className=\"task-adding__btn\" onClick={this.addTaskFormToggle}>\r\n                            <span className=\"task-adding__btn_plus\">+</span> <span className=\"task-adding__btn_text\">Добавьте ещё одну карточку</span>\r\n                        </button>)}\r\n                    { addTaskFormShow && (<form action=\"#\" className=\"task-adding-form\">\r\n                        <textarea onKeyPress={this.handleKeyPressAddTask} ref={el => this.addTaskTextArea = el} className=\"task-adding-form__input\" placeholder=\"Ввести заголовок для этой карточки\"></textarea>\r\n                        <button className=\"task-adding-form__btn_add\" onClick={(e) => {\r\n                                this.addTaskFormHide(e);\r\n                                addTask(listId, this.addTaskTextArea.value);\r\n                                \r\n                            }} >Добавьте карточку</button>\r\n                        <button className=\"task-adding-form__btn_close\" onClick={this.addTaskFormToggle}>✖</button>\r\n                    </form>)}\r\n                    </ClickOutside>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoardsList;","import { connect } from 'react-redux'\nimport BoardsList from '../components/BoardsList/BoardsList'\nimport { removeList } from '../actions'\nimport { addTask } from '../actions'\n\nconst mapStateToProps = (state, ownProps) => \n{\n    const list = state.lists.filter((list, i) => {\n        return ownProps.listId === list.id;\n    })\n\n    const name = list[0].name;\n    const listsIds = list[0].tasksId;\n    const listId = list[0].id;\n    const tasksArr = state.tasks;\n    const tasks = listsIds.map(id => {\n        for(let i = 0; i < tasksArr.length; i++) {\n            if(id === tasksArr[i].id) return tasksArr[i]\n        }\n        return false;\n    })\n\n    return { tasks, name, listId }\n    \n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    removeList: id => dispatch(removeList(id)),\n    addTask: (id, text) => dispatch(addTask(id, text))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoardsList)\n","import React, { Component } from 'react';\r\nimport BoardsListContainer from '../../containers/BoardsListContainer'\r\nimport './boards-wrapper.scss';\r\n\r\nclass Boards extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addListForm: false,\r\n    }\r\n    \r\n  } \r\n  componentDidUpdate() {\r\n    if (!this.inputTitle) return;\r\n    this.inputTitle.focus()\r\n  }\r\n\r\n  openFormAddList = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      addListForm: !this.state.addListForm,\r\n    }); \r\n    return false;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { lists, addList } = this.props;\r\n    const { addListForm } = this.state;\r\n\r\n    return (\r\n      <div className=\"boards-wrapper\">\r\n\r\n        <div className=\"boards\"> \r\n          {lists.map(list =>\r\n            <BoardsListContainer listId={list.id} key={list.id} />\r\n          )}\r\n        </div>\r\n    \r\n        <div className=\"board-adding\">\r\n          { !addListForm && (<button className=\"board-adding__btn\" onClick={this.openFormAddList}>+ Добавьте ещё одну колонку</button>)}\r\n          { addListForm && (<form className=\"board-adding-form\">\r\n            <input ref={el => this.inputTitle = el} className=\"board-adding-form__input\" placeholder=\"Ввести заголовок списка\" />\r\n            <button className=\"board-adding-form__btn_add\" onClick={(e) => {\r\n              addList(this.inputTitle.value);\r\n              this.openFormAddList(e);\r\n              }}>Добавьте список</button>\r\n            <button className=\"board-adding-form__btn_close\" onClick={this.openFormAddList}>✖</button>\r\n          </form>)}\r\n        </div>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boards;\r\n","import { connect } from 'react-redux'\nimport Boards from '../components/Boards/Boards'\nimport { addList } from '../actions'\n\nconst mapStateToProps = (state, ownProps) => \n{\n  return { lists: state.lists }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addList: text => dispatch(addList(text))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Boards)\n","import React from 'react';\r\nimport { LastLocationProvider } from 'react-router-last-location';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport Task from '../components/Task/Task';\r\nimport BoardsContainer from '../containers/BoardsContainer';\r\nimport '../styles/app-styles.scss';\r\n\r\nconst Main = () => (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\r\n        <LastLocationProvider>\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={BoardsContainer}/>\r\n                    <Route path=\"/task\" component={Task}/>\r\n                </Switch>\r\n            </div>\r\n        </LastLocationProvider>\r\n    </BrowserRouter>)\r\n\r\n    export default Main;","let counterTaskId = 6;\r\nconst lists = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_LIST':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          name: action.text,\r\n          tasksId: [],\r\n        }\r\n      ];\r\n    case 'REMOVE_LIST':\r\n      return state.filter(list => list.id !== action.id);\r\n    case 'ADD_TASK':\r\n\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: [...list.tasksId, counterTaskId++]} \r\n        : list                                                                                                             \r\n      )\r\n    case 'REMOVE_TASK':\r\n      return state.map(list =>\r\n        (list.id === action.listId) \r\n        ? {...list, tasksId: list.tasksId.filter(task => task !== action.taskId)} \r\n        : list                                                                                                             \r\n      )\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lists;","let counterTaskId = 6;\nconst tasks = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_TASK':\n        return [\n          ...state,\n          {\n            id: counterTaskId++,\n            text: action.text,\n          }\n        ];\n      case 'REMOVE_TASK':\n        return state.filter(\n            task => task.id !== action.taskId \n        );\n      default:\n        return state;\n    }\n  };\n  \n  export default tasks;","import { combineReducers } from 'redux';\r\nimport lists from './lists'\r\nimport tasks from './tasks'\r\n\r\nconst BoardsObj = combineReducers({\r\n  lists,\r\n  tasks,\r\n});\r\n\r\nexport default BoardsObj;\r\n","const initialStore = {\n    lists: [\n        {\n            id: 1,\n            name: 'list1',\n            tasksId: [4, 2, 3],\n        },\n        {\n            id: 2,\n            name: 'list2',\n            tasksId: [1, 5],\n        },\n    ],\n    tasks: [\n        {\n            id: 1,\n            text: 'task1',\n        },\n        {\n            id: 2,\n            text: 'task2',\n        },\n        {\n            id: 3,\n            text: 'task3',\n        },\n        {\n            id: 4,\n            text: 'task4',\n        },\n        {\n            id: 5,\n            text: 'task5',\n        },\n    ]\n}\n\nexport default initialStore","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport Main from './router';\nimport BoardsObj from './reducers'\nimport initialStore from './initialStore'\n\nlet store = createStore(BoardsObj, initialStore)\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}